
# Deployapp
# Config file
# deployapp (--websites | --scripts | --workers)

---
# Virtualenv
virtualenv:
  name: ""
  directory: ""
  rebuild: ""

# Sites: list of dict of web sites application
web:
  -
    # The site name
    name: "mysite.com" # The site name
    application: "run_mysite:flask_app" # for python application

    # Nginx related config
    nginx:
      port: 80
      server_name: "mysite.com" # Optional if the server name is different than name, or has multiple server_name
      logs_dir: ""
      root_dir: ""
      aliases:
        "/static": "mysite/static"
      force_non_www: True
      force_www: False
      server_directives: ""
      ssl_directives: ""
      ssl_cert: ""
      ssl_key: ""

    # Gunicorn option (Optional. Python only)
    gunicorn:
      workers: 4
      threads: 8

    # Prevent site from being redeployed
    exclude: True

    # To remove the site configuration
    remove: True

    # 0.13.0
    maintenance:
      status: Off
      page: "/maintenance/index.html"
      aliases:
        "/static": "maintenance/static"
      keep_server_on: True
      allowed_ips:
        - 1.2.4.5
        - 2.3.4.5

  -
    name: "sub.mysite.com"
    application: "run_submysite:flask_app"
    nginx:
      aliases:
        "/static": "my_static_dir"
      ssl_cert: "ssl/site.cert"
      ssl_key: "ssl/site.key"
    remove: False
  -
    name: "myphphtmlsite.com"
    nginx:
      root_dir: "html"

# SCRIPTS TO RUN
scripts:
  -
    command: ""
  -
    command: "$PYTHON myscript.py"
    directory: ""
    exclude: True # Prevent this script from resetting


# SCRIPTS-PRE-WEB: To run script before web deploy
scripts_pre_web:
  -
    command: ""
  -
    command: "myscript.py"
    directory: ""

# SCRIPTS-POST-WEB: To run after web deploy
scripts_post_web:
  -
    command: ""
  -
    directory: ""
    command: "$PTHON myscript.py"


# SCRIPTS-UNDEPLOY: Will run this script when UNDEPLOYING
scripts_undeploy:
  -
    command: ""
  -
    directory: ""
    command: "$PTHON myscript.py"


# SCRIPTS-MY_SCRIPT_NAME: Run a custom script. --scripts --name my_script_name
scripts_my_script_name:
  -
    command: ""
  -
    directory: ""
    command: "$PTHON myscript.py"


# WORKERS: Run custom script or app in the background using supervisor
workers:
  -
    name: "myworker1"
    command: "$PYTHON myyworker1.py
  -
    name: "myworker2"
    directory: ""
    command: "$PYTHON myyworker2.py"
    user: ""
    exclude: True  # Prevent this worker from rerunning


